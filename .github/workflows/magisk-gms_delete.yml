name: GMS_Delete

on:
  workflow_dispatch:

jobs:
  zip-download-and-release:
    runs-on: ubuntu-latest

    steps:
    - name: Clone Repository
      uses: actions/checkout@v3

    - name: Set app name
      run: echo "APP_NAME=GMS_Delete" >> $GITHUB_ENV

    - name: Set folder name
      run: echo "FOLDER_NAME=apks/magisk/GMS_Delete/" >> $GITHUB_ENV

    - name: Create folder
      run: mkdir -p "${{ env.FOLDER_NAME }}"

    - name: Download ZIP file
      run: |
        curl -L -o "${{ env.FOLDER_NAME }}${{ env.APP_NAME }}.zip" "https://github.com/user-attachments/files/16999114/gms_delete.zip"

    - name: Download Icon
      run: |
        curl -L -o "${{ env.FOLDER_NAME }}${{ env.APP_NAME }}.jpeg" "https://upload.wikimedia.org/wikipedia/commons/thumb/2/2b/Magisk_Logo.svg/459px-Magisk_Logo.svg.png"

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: "${{ env.APP_NAME }}"
        release_name: "${{ env.APP_NAME }}"
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload ZIP to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "${{ env.FOLDER_NAME }}${{ env.APP_NAME }}.zip"
        asset_name: "${{ env.APP_NAME }}.zip"
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Icon to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "${{ env.FOLDER_NAME }}${{ env.APP_NAME }}.jpeg"
        asset_name: "${{ env.APP_NAME }}.jpeg"
        asset_content_type: image/jpeg
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Update Release Description with Icon
      run: |
        IMAGE_URL="https://github.com/${{ github.repository }}/releases/download/${{ env.APP_NAME }}/${{ env.APP_NAME }}.jpeg"
        curl -X PATCH \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -d "{\"body\": \"${{ env.APP_NAME }} release. ![$IMAGE_URL]($IMAGE_URL)\"}" \
          https://api.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Run Python script
      run: python "${{ env.FOLDER_NAME }}setup.py"

    - name: Commit index.html changes
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add "${{ env.FOLDER_NAME }}index.html"
        git commit -m "Update ${{ env.APP_NAME }}" || echo "No changes to commit"

    - name: Push to main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:main
