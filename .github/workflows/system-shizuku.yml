name: Shizuku

on:
  workflow_dispatch: # Trigger manually only

jobs:
  apk-download-and-release:
    runs-on: ubuntu-latest

    steps:
    - name: Clone Repository
      uses: actions/checkout@v3

    - name: Set app name
      run: echo "APP_NAME=Shizuku_13.5.4" >> $GITHUB_ENV

    - name: set folder
      run: echo "FOLDER_NAME=apks/system/shizuku/" >> $GITHUB_ENV



    - name: Download APK File
      run: |
        # Create necessary folders
        mkdir -p ${{ env.FOLDER_NAME }}

        # Download the APK file
        curl -L -o ${{  env.FOLDER_NAME }}${{ env.APP_NAME }}.apk "https://github.com/RikkaApps/Shizuku/releases/download/v13.5.4/shizuku-v13.5.4.r1049.0e53409-release.apk"

    - name: Download Icon
      run: |
        # Download image from the internet
        curl -L -o ${{ env.FOLDER_NAME }}${{ env.APP_NAME }}.jpeg "https://shizuku.rikka.app/logo.png"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: "${{ env.APP_NAME }}" # Adjust if needed
        release_name: "${{ env.APP_NAME }}"
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload APK to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.FOLDER_NAME }}${{ env.APP_NAME }}.apk
        asset_name: ${{ env.APP_NAME }}.apk
        asset_content_type: application/vnd.android.package-archive
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Icon to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.FOLDER_NAME }}${{ env.APP_NAME }}.jpeg
        asset_name: ${{ env.APP_NAME }}.jpeg
        asset_content_type: image/jpeg
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Update Release Description with Image
      run: |
        # Update release description with image link
        IMAGE_URL="https://github.com/${{ github.repository }}/releases/download/${{ env.APP_NAME }}/${{ env.APP_NAME }}.jpeg"
        curl -X PATCH \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -d "{\"body\": \"${{ env.APP_NAME }} release. ![$IMAGE_URL]($IMAGE_URL)\"}" \
          https://api.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}


    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip

    - name: Set up Git user
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Run python
      run: |
        python ${{ env.FOLDER_NAME }}setup.py

    - name: Commit changes
      run: |
        git add ${{ env.FOLDER_NAME }}/index.html
        git commit -m "Update {{ env.APP_NAME }}" || echo "No changes to commit"

    - name: Push changes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:main
